{"version":3,"sources":["components/DropDownMenu/DropDownMenu.tsx","data/people.ts","App.tsx","services/filterPersonList.ts","index.tsx"],"names":["DropDownMenu","personList","selectPerson","className","role","length","map","person","href","type","onClick","cn","sex","name","slug","peopleFromServer","born","died","fatherName","motherName","App","useState","query","setQuery","selectedPerson","setSelectedPerson","isThereLoading","setIsThereLoading","isInputFocused","setIsInputFocused","personListToDisplay","setPersonListToDisplay","applyFilteredPersonList","useCallback","callback","delay","setLoading","timerId","arr","window","clearTimeout","setTimeout","debounce","placeholder","value","onInput","event","currentTarget","filter","toLowerCase","includes","filterPersonList","onFocus","style","display","ReactDOM","render","document","getElementById"],"mappings":"8NAQaA,EAAgC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAC1D,OACE,qBAAKC,UAAU,gBAAgBC,KAAK,OAApC,SACE,qBAAKD,UAAU,mBAAf,SACyB,IAAtBF,EAAWI,OACRJ,EAAWK,KAAI,SAAAC,GAAM,OACrB,mBACEC,KAAK,KACLC,KAAK,SACLN,UAAU,gBACVO,QAAS,WACPR,EAAaK,EACd,EANH,SASE,mBAAGJ,UAAWQ,IAAG,CACf,gBAAgC,MAAfJ,EAAOK,IACxB,kBAAkC,MAAfL,EAAOK,MAF5B,SAKGL,EAAOM,QAPLN,EAAOO,KARO,IAoBrB,qBAAKX,UAAU,gBAAf,SACE,6DAQb,ECxCYY,EAA6B,CACxC,CACEF,KAAM,oBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,oBACZL,KAAM,0BAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,qBACZC,WAAY,mBACZL,KAAM,yBAER,CACED,KAAM,iBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,2BACZL,KAAM,uBAER,CACED,KAAM,kBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,sBACZC,WAAY,oBACZL,KAAM,wBAER,CACED,KAAM,sBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZL,KAAM,4BAER,CACED,KAAM,wBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,gCACZC,WAAY,KACZL,KAAM,8BAER,CACED,KAAM,wBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,KACZL,KAAM,8BAER,CACED,KAAM,kBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,gBACZL,KAAM,wBAER,CACED,KAAM,kBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,cACZL,KAAM,wBAER,CACED,KAAM,wBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,eACZL,KAAM,8BAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,KACZL,KAAM,yBAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZL,KAAM,yBAER,CACED,KAAM,2BACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,qBACZL,KAAM,iCAER,CACED,KAAM,uBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,gBACZL,KAAM,6BAER,CACED,KAAM,wBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,KACZL,KAAM,8BAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,yBAER,CACED,KAAM,0BACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,yBACZC,WAAY,uBACZL,KAAM,gCAER,CACED,KAAM,oBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,wBACZL,KAAM,0BAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZL,KAAM,yBAER,CACED,KAAM,sBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZL,KAAM,4BAER,CACED,KAAM,gBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,KACZC,WAAY,KACZL,KAAM,sBAER,CACED,KAAM,2BACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,mBACZL,KAAM,iCAER,CACED,KAAM,iBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,mBACZL,KAAM,uBAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,2BACZL,KAAM,yBAER,CACED,KAAM,iBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZL,KAAM,uBAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,yBAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZL,KAAM,yBAER,CACED,KAAM,kBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZL,KAAM,wBAER,CACED,KAAM,yBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZL,KAAM,+BAER,CACED,KAAM,kBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZL,KAAM,wBAER,CACED,KAAM,uBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,6BAER,CACED,KAAM,iBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,cACZC,WAAY,iBACZL,KAAM,uBAER,CACED,KAAM,sBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZL,KAAM,4BAER,CACED,KAAM,kBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,0BACZC,WAAY,iBACZL,KAAM,wBAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,wBACZL,KAAM,yBAER,CACED,KAAM,gBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,sBAER,CACED,KAAM,iBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,uBACZL,KAAM,uBAER,CACED,KAAM,cACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,oBACZL,KAAM,oBAER,CACED,KAAM,gCACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,sBACZL,KAAM,uCCrUH,IAAMM,EAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4CF,mBAAwB,MAApE,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAA4CJ,oBAAS,GAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAA4CN,oBAAS,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KACA,EACIR,mBAASN,GADb,mBAAOe,EAAP,KAA4BC,EAA5B,KAGMC,EACFC,sBAzBN,SACEC,EACAC,EACAC,GAEA,IAAIC,EAAU,EAEd,OAAO,SAACC,GACNC,OAAOC,aAAaH,GACpBA,EAAUE,OAAOE,YAAW,WAC1BP,EAASI,GACTF,GAAW,EACZ,GAAED,EACJ,CACF,CAWiBO,CACZX,EACA,IACAJ,GACC,IAiBL,OACE,uBAAMxB,UAAU,UAAhB,UACE,oBAAIA,UAAU,QAAd,SACGqB,EAAc,UACRA,EAAeX,KADP,aACgBW,EAAeR,KAD/B,cACyCQ,EAAeP,KADxD,KAEX,uBAGN,sBAAKd,UAAWQ,IAAG,WAAY,CAAE,YAAaiB,IAA9C,UACE,sBAAKzB,UAAU,mBAAf,UACE,uBACEM,KAAK,OACLkC,YAAY,2BACZxC,UAAU,QACVyC,MAAOtB,EACPuB,QA7BN,SAACC,GACDvB,EAASuB,EAAMC,cAAcH,OAC7BjB,GAAkB,GAClBK,EC3CF,SAAC/B,EAAsBqB,GACvB,OAAOrB,EAAW+C,QAAO,SAAAzC,GAAM,OAAIA,EAAOM,KACvCoC,cAAcC,SAAS5B,EAAM2B,cADD,GAEhC,CDwC2BE,CAAiBpC,EACvC+B,EAAMC,cAAcH,OACvB,EAyBOQ,QAAS,kBAAMvB,GAAkB,EAAxB,IAEX,sBACE1B,UAAU,qBACVkD,MAAO,CAAEC,QAAS5B,EAAiB,QAAU,cAI/CA,GACA,cAAC,EAAD,CACEzB,WAAY6B,EACZ5B,aAlCiB,SAACK,GAC1BsB,GAAkB,GAClBJ,EAAkBlB,GAClBgB,EAAShB,EAAOM,MAChBkB,EAAuB,CAACxB,GACzB,SAmCF,EEtFDgD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.a9251f54.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  personList: Person[]\n  selectPerson: (person: Person) => void;\n};\n\nexport const DropDownMenu: React.FC<Props> = ({ personList, selectPerson }) => {\n  return (\n    <div className=\"dropdown-menu\" role=\"menu\">\n      <div className=\"dropdown-content\">\n        {personList.length !== 0\n          ? personList.map(person => (\n            <a\n              href=\"/#\"\n              type=\"button\"\n              className=\"dropdown-item\"\n              onClick={() => {\n                selectPerson(person);\n              }}\n              key={person.slug}\n            >\n              <p className={cn({\n                'has-text-link': person.sex === 'm',\n                'has-text-danger': person.sex === 'f',\n              })}\n              >\n                {person.name}\n              </p>\n            </a>\n          ))\n          : (\n            <div className=\"dropdown-item\">\n              <p>\n                No matching suggestions\n              </p>\n            </div>\n          )}\n      </div>\n    </div>\n  );\n};\n","import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import React, {\n  useCallback,\n  useState,\n} from 'react';\nimport cn from 'classnames';\nimport './App.scss';\nimport { Person } from './types/Person';\nimport { DropDownMenu } from './components/DropDownMenu';\nimport { peopleFromServer } from './data/people';\nimport { filterPersonList } from './services/filterPersonList';\n\nfunction debounce<T>(\n  callback: (arr: T[]) => void,\n  delay: number,\n  setLoading: (val: boolean) => void,\n) {\n  let timerId = 0;\n\n  return (arr: T[]) => {\n    window.clearTimeout(timerId);\n    timerId = window.setTimeout(() => {\n      callback(arr);\n      setLoading(false);\n    }, delay);\n  };\n}\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);\n  const [isThereLoading, setIsThereLoading] = useState(false);\n  const [isInputFocused, setIsInputFocused] = useState(false);\n  const [personListToDisplay, setPersonListToDisplay]\n    = useState(peopleFromServer);\n\n  const applyFilteredPersonList\n    = useCallback(debounce<Person>(\n      setPersonListToDisplay,\n      1000,\n      setIsThereLoading,\n    ), []);\n\n  const handleInput\n    = (event: React.FormEvent<HTMLInputElement>) => {\n      setQuery(event.currentTarget.value);\n      setIsThereLoading(true);\n      applyFilteredPersonList(filterPersonList(peopleFromServer,\n        event.currentTarget.value));\n    };\n\n  const handleSelectPerson = (person: Person) => {\n    setIsInputFocused(false);\n    setSelectedPerson(person);\n    setQuery(person.name);\n    setPersonListToDisplay([person]);\n  };\n\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">\n        {selectedPerson\n          ? `${selectedPerson.name} (${selectedPerson.born} - ${selectedPerson.died})`\n          : 'No selected person'}\n      </h1>\n\n      <div className={cn('dropdown', { 'is-active': isInputFocused })}>\n        <div className=\"dropdown-trigger\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter a part of the name\"\n            className=\"input\"\n            value={query}\n            onInput={handleInput}\n            onFocus={() => setIsInputFocused(true)}\n          />\n          <span\n            className=\"bulma-loader-mixin\"\n            style={{ display: isThereLoading ? 'block' : 'none' }}\n          />\n        </div>\n\n        {!isThereLoading && (\n          <DropDownMenu\n            personList={personListToDisplay}\n            selectPerson={handleSelectPerson}\n          />\n        )}\n      </div>\n    </main>\n  );\n};\n","import { Person } from '../types/Person';\n\nexport const filterPersonList\n  = (personList: Person[], query: string) : Person[] => {\n    return personList.filter(person => person.name\n      .toLowerCase().includes(query.toLowerCase()));\n  };\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}